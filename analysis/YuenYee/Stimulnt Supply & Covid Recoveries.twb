<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook original-version='18.1' source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='foodsupply' inline='true' name='federated.1vbwoap18db3wh1f4qrbg02e1324' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='foodsupply' name='textscan.0qhz2ob0l5rnh01g8a6ku15shxj5'>
            <connection class='textscan' directory='C:/Users/lyuen/OneDrive/Desktop/Data301/Project/project-group28-project/analysis/YuenYee' filename='foodsupply.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0qhz2ob0l5rnh01g8a6ku15shxj5' name='foodsupply.csv' table='[foodsupply#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='% Stimulants (kg)' ordinal='2' />
            <column datatype='real' name='% Stimulants (kcal)' ordinal='3' />
            <column datatype='real' name='% Confirmed' ordinal='4' />
            <column datatype='real' name='% Deaths' ordinal='5' />
            <column datatype='real' name='% Recovered' ordinal='6' />
            <column datatype='real' name='% Active' ordinal='7' />
            <column datatype='real' name='Population' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0qhz2ob0l5rnh01g8a6ku15shxj5' name='foodsupply.csv' table='[foodsupply#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='% Stimulants (kg)' ordinal='2' />
            <column datatype='real' name='% Stimulants (kcal)' ordinal='3' />
            <column datatype='real' name='% Confirmed' ordinal='4' />
            <column datatype='real' name='% Deaths' ordinal='5' />
            <column datatype='real' name='% Recovered' ordinal='6' />
            <column datatype='real' name='% Active' ordinal='7' />
            <column datatype='real' name='Population' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Stimulants (kg)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Stimulants (kg)]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>% Stimulants (kg)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Stimulants (kcal)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Stimulants (kcal)]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>% Stimulants (kcal)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Confirmed]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>% Confirmed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Deaths]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>% Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Recovered]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>% Recovered</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% Active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% Active]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>% Active</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[foodsupply.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[% Recovered]' role='measure' type='quantitative' />
      <column datatype='real' name='[% Stimulants (kcal)]' role='measure' type='quantitative' />
      <column datatype='real' name='[% Stimulants (kg)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='foodsupply.csv' datatype='table' name='[__tableau_internal_object_id__].[foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D]' role='measure' type='quantitative' />
      <column-instance column='[% Stimulants (kcal)]' derivation='Avg' name='[avg:% Stimulants (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% Stimulants (kcal)]' derivation='Count' name='[cnt:% Stimulants (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% Recovered]' derivation='Sum' name='[sum:% Recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% Stimulants (kcal)]' derivation='Sum' name='[sum:% Stimulants (kcal):qk]' pivot='key' type='quantitative' />
      <column-instance column='[% Stimulants (kg)]' derivation='Sum' name='[sum:% Stimulants (kg):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:\% Recovered:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:\% Stimulants (kcal):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:\% Stimulants (kg):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:\% Stimulants (kcal):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324].[cnt:\% Stimulants (kcal):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='foodsupply.csv' id='foodsupply.csv_786AEBAC3CBE4DE3A31FFEAA3038383D'>
            <properties context=''>
              <relation connection='textscan.0qhz2ob0l5rnh01g8a6ku15shxj5' name='foodsupply.csv' table='[foodsupply#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='% Stimulants (kg)' ordinal='2' />
                  <column datatype='real' name='% Stimulants (kcal)' ordinal='3' />
                  <column datatype='real' name='% Confirmed' ordinal='4' />
                  <column datatype='real' name='% Deaths' ordinal='5' />
                  <column datatype='real' name='% Recovered' ordinal='6' />
                  <column datatype='real' name='% Active' ordinal='7' />
                  <column datatype='real' name='Population' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar plot of % Stimulants in kg and kcal'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='foodsupply' name='federated.1vbwoap18db3wh1f4qrbg02e1324' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vbwoap18db3wh1f4qrbg02e1324'>
            <column datatype='real' name='[% Stimulants (kcal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[% Stimulants (kg)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Stimulants (kcal)]' derivation='Sum' name='[sum:% Stimulants (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Stimulants (kg)]' derivation='Sum' name='[sum:% Stimulants (kg):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:\% Stimulants (kcal):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:\% Stimulants (kg):qk]&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]' direction='ASC' />
          <manual-sort column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Timor-Leste&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;United States of America&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Taiwan*&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
              <bucket>&quot;Korea, South&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vbwoap18db3wh1f4qrbg02e1324].[Multiple Values]' field-type='quantitative' max='3.4558649999999997' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]</rows>
        <cols>[federated.1vbwoap18db3wh1f4qrbg02e1324].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{87A282C4-CF7B-4080-BCF3-DA5F7DB32583}' />
    </worksheet>
    <worksheet name='Scatter plot % Stimulants (kcal) vs % Recovered'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='foodsupply' name='federated.1vbwoap18db3wh1f4qrbg02e1324' />
          </datasources>
          <datasource-dependencies datasource='federated.1vbwoap18db3wh1f4qrbg02e1324'>
            <column datatype='real' name='[% Recovered]' role='measure' type='quantitative' />
            <column datatype='real' name='[% Stimulants (kcal)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Recovered]' derivation='Sum' name='[sum:% Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Stimulants (kcal)]' derivation='Sum' name='[sum:% Stimulants (kcal):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Stimulants (kcal):qk]' value='56' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='717' />
                <format attr='maxwidth' value='717' />
                <format attr='minheight' value='718' />
                <format attr='maxheight' value='718' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Stimulants (kcal):qk]</rows>
        <cols>[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Recovered:qk]</cols>
      </table>
      <simple-id uuid='{FC2F0F0A-0397-42FD-92B6-CA477E913334}' />
    </worksheet>
    <worksheet name='Scatter plot % Stimulants (kg) vs % Recovered'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='foodsupply' name='federated.1vbwoap18db3wh1f4qrbg02e1324' />
          </datasources>
          <datasource-dependencies datasource='federated.1vbwoap18db3wh1f4qrbg02e1324'>
            <column datatype='real' name='[% Recovered]' role='measure' type='quantitative' />
            <column datatype='real' name='[% Stimulants (kg)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[% Recovered]' derivation='Sum' name='[sum:% Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Stimulants (kg)]' derivation='Sum' name='[sum:% Stimulants (kg):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Recovered:qk]' value='77' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[Country:	<[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>% Recovered:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Recovered:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>% Stimulants (kg):</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Stimulants (kg):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Stimulants (kg):qk]</rows>
        <cols>[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Recovered:qk]</cols>
      </table>
      <simple-id uuid='{1C2EBFCD-CC64-4FA3-8068-CE56B1567269}' />
    </worksheet>
    <worksheet name='World Map of Percentage Covid Recoveries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='foodsupply' name='federated.1vbwoap18db3wh1f4qrbg02e1324' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vbwoap18db3wh1f4qrbg02e1324'>
            <column datatype='real' name='[% Recovered]' role='measure' type='quantitative' />
            <column datatype='real' name='[% Stimulants (kcal)]' role='measure' type='quantitative' />
            <column datatype='real' name='[% Stimulants (kg)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[% Recovered]' derivation='Avg' name='[avg:% Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Stimulants (kcal)]' derivation='Avg' name='[avg:% Stimulants (kcal):qk]' pivot='key' type='quantitative' />
            <column-instance column='[% Stimulants (kg)]' derivation='Avg' name='[avg:% Stimulants (kg):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vbwoap18db3wh1f4qrbg02e1324].[Longitude (generated)]' field-type='quantitative' max='17165750.261634707' min='-24494732.074719794' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vbwoap18db3wh1f4qrbg02e1324].[Latitude (generated)]' field-type='quantitative' max='11604383.666405413' min='-8261765.1029915251' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Recovered:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]' />
              <color column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Recovered:qk]' />
              <lod column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Stimulants (kg):qk]' />
              <lod column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Stimulants (kcal):qk]' />
              <geometry column='[federated.1vbwoap18db3wh1f4qrbg02e1324].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#4e79a7'>Country</run>
                <run bold='true' fontcolor='#787878'>:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Avg. % Recovered:</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Recovered:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Avg. % Stimulants (kcal):</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Stimulants (kcal):qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Avg. % Stimulants (kg):</run>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'><![CDATA[<[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Stimulants (kg):qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9d9a' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vbwoap18db3wh1f4qrbg02e1324].[Latitude (generated)]</rows>
        <cols>[federated.1vbwoap18db3wh1f4qrbg02e1324].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{96F600DC-248B-47B4-92D1-511789B19FAE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Stimulant Supply &amp; Covid Recoveries'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89125' id='7' param='horz' type-v2='layout-flow' w='72300' x='26900' y='9875'>
            <zone h='89125' id='5' type-v2='layout-basic' w='72300' x='26900' y='9875'>
              <zone h='49634' id='3' name='World Map of Percentage Covid Recoveries' w='72300' x='26900' y='9875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39491' id='9' name='Scatter plot % Stimulants (kg) vs % Recovered' w='36150' x='26900' y='59509'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39491' id='10' name='Scatter plot % Stimulants (kcal) vs % Recovered' w='36150' x='63050' y='59509'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='79750' id='13' param='vert' type-v2='layout-flow' w='26100' x='800' y='9875'>
            <zone h='9125' id='8' name='World Map of Percentage Covid Recoveries' pane-specification-id='0' param='[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Recovered:qk]' type-v2='color' w='26100' x='800' y='9875'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='70625' id='11' name='Bar plot of % Stimulants in kg and kcal' w='26100' x='800' y='19000'>
              <layout-cache fixed-size-h='3386' minwidth='220' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='9375' id='12' name='Bar plot of % Stimulants in kg and kcal' pane-specification-id='9' param='[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]' type-v2='color' w='26100' x='800' y='89625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='8875' id='14' type-v2='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='12'>Is there a correlation between stimulant supply and covid-19 recoveries in different countries?</run>
              <run fontalignment='1'>
Through various forms of data visualization, this dashboard aims to showcase stimulant supply percentages (kg &amp; kcal) within different countries to see whether there is a correlation between high recovery percentages and stimulant supply.</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='8875' id='14' type-v2='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='12'>Is there a correlation between stimulant supply and covid-19 recoveries in different countries?</run>
                    <run fontalignment='1'>
Through various forms of data visualization, this dashboard aims to showcase stimulant supply percentages (kg &amp; kcal) within different countries to see whether there is a correlation between high recovery percentages and stimulant supply.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49634' id='3' is-fixed='true' name='World Map of Percentage Covid Recoveries' w='72300' x='26900' y='9875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='8' name='World Map of Percentage Covid Recoveries' pane-specification-id='0' param='[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Recovered:qk]' type-v2='color' w='26100' x='800' y='9875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='70625' id='11' is-fixed='true' name='Bar plot of % Stimulants in kg and kcal' w='26100' x='800' y='19000'>
                  <layout-cache fixed-size-h='3386' minwidth='220' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9375' id='12' name='Bar plot of % Stimulants in kg and kcal' pane-specification-id='9' param='[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]' type-v2='color' w='26100' x='800' y='89625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39491' id='9' is-fixed='true' name='Scatter plot % Stimulants (kg) vs % Recovered' w='36150' x='26900' y='59509'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39491' id='10' is-fixed='true' name='Scatter plot % Stimulants (kcal) vs % Recovered' w='36150' x='63050' y='59509'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{09C6987A-3147-4728-9CC7-FB1AF3B7852C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' name='World Map of Percentage Covid Recoveries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Recovered:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[avg:% Recovered:qk]</field>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D75CEDFF-EB9C-404F-8F47-D70C0DDAB5CA}' />
    </window>
    <window class='worksheet' name='Scatter plot % Stimulants (kg) vs % Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{783FE173-1AE9-4044-A426-81021670A651}' />
    </window>
    <window class='worksheet' name='Scatter plot % Stimulants (kcal) vs % Recovered'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F9B3FD4-0F0A-49BB-86C0-C834CC1BA700}' />
    </window>
    <window class='worksheet' name='Bar plot of % Stimulants in kg and kcal'>
      <cards>
        <edge name='left'>
          <strip size='164'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='9' param='[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]</field>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[none:Country:nk]</field>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Recovered:ok]</field>
            <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[sum:% Stimulants (kg):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA525331-C633-4F30-A22A-D357E3713D0A}' />
    </window>
    <window class='dashboard' maximized='true' name='Stimulant Supply &amp; Covid Recoveries'>
      <viewpoints>
        <viewpoint name='Bar plot of % Stimulants in kg and kcal'>
          <highlight>
            <color-one-way>
              <field>[federated.1vbwoap18db3wh1f4qrbg02e1324].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Scatter plot % Stimulants (kcal) vs % Recovered'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Scatter plot % Stimulants (kg) vs % Recovered'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='World Map of Percentage Covid Recoveries'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FEB80E59-EF91-46CF-B20E-4B4F43AD8880}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar plot of % Stimulants in kg and kcal' width='192'>
      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
      b9kIy5MiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Scatter plot % Stimulants (kcal) vs % Recovered' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter plot % Stimulants (kg) vs % Recovered' width='192'>
      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
      Pf+llYgWDgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stimulant Supply &amp; Covid Recoveries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Map of Percentage Covid Recoveries' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
